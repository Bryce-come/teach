{"remainingRequest":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/web-toolkit/src/components/lkt-select.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/web-toolkit/src/components/lkt-select.vue","mtime":1579004471000},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/css-loader/dist/cjs.js","mtime":1581426799462},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1581426799590},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/postcss-loader/src/index.js","mtime":1574737716083},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/sass-loader/dist/cjs.js","mtime":1574747870029},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/cache-loader/dist/cjs.js","mtime":1574737719973},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/index.js","mtime":1581426799590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxrdC1zZWxlY3QtLWFsbCB7CiAgcGFkZGluZzogNXB4IDIwcHg7Cn0K"},{"version":3,"sources":["lkt-select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA","file":"lkt-select.vue","sourceRoot":"node_modules/web-toolkit/src/components","sourcesContent":["<template>\n  <el-select :value=\"value\" :value-key=\"valueKey\" :loading=\"loading\" :disabled=\"disabled\" :filterable=\"filterable\" :clearable=\"clearable\" :multiple=\"multiple\" :placeholder=\"placeholder\" :collapse-tags=\"collapseTags\" @change=\"update\">\n    <div v-if=\"multiple && list && list.length>0 \" class=\"flex align-center lkt-select--all\">\n      <el-checkbox :value=\"value && value.length === list.length\" @change=\"selectAll\">全选</el-checkbox>\n    </div>\n    <el-option\n            v-for=\"(item, index) of list\" :key=\"`lkt-select-option-${index}`\" :label=\"item[valueKey]\"\n            :value=\"optionValueKey ? item[optionValueKey] : item\"/>\n  </el-select>\n</template>\n<script lang=\"ts\">\nexport default {\n  props: {\n    value: {},\n    valueKey: {\n      type: String,\n      default: 'name',\n    },\n    optionValueKey: {\n      type: String,\n      default: '',\n    },\n    filterable: {\n      type: Boolean,\n      default: true,\n    },\n    multiple: Boolean,\n    clearable: {\n      type: Boolean,\n      default(this: any) {\n        return !this.multiple;\n      },\n    },\n    disabled: Boolean,\n    collapseTags: {\n      type: Boolean,\n      default: true,\n    },\n    placeholder: {\n      type: String,\n      default: '请选择',\n    },\n    list: {\n      type: Array,\n      default: () => [],\n    },\n    loading: Boolean,\n  },\n  setup(props: Record<string, any>, ctx: any) {\n    const update = (val: any) => {\n      ctx.emit('input', val);\n      ctx.emit('select', val);\n      ctx.emit('change', val);\n    };\n    const selectAll = (all: boolean) => {\n        if (props.optionValueKey) {\n            update(all ? props.list.map((item: any) => item[props.optionValueKey]) : []);\n        } else {\n            update(all ? props.list.slice() : []);\n        }\n    };\n    return { update, selectAll };\n  },\n};\n</script>\n<style lang=\"scss\">\n.lkt-select--all {\n  padding: 5px 20px;\n}\n</style>\n\n"]}]}