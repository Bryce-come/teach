{"remainingRequest":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/web-toolkit/src/components/lkt-scrollbar.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/web-toolkit/src/components/lkt-scrollbar.vue","mtime":1579004471000},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/css-loader/dist/cjs.js","mtime":1581426799462},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1581426799590},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/postcss-loader/src/index.js","mtime":1574737716083},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/sass-loader/dist/cjs.js","mtime":1574747870029},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/cache-loader/dist/cjs.js","mtime":1574737719973},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/index.js","mtime":1581426799590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5sa3Qtc2Nyb2xsYmFyIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICAmOmhvdmVyID4gLmxrdC1zY3JvbGxiYXItLXBhdGh3YXkgewogICAgb3BhY2l0eTogLjM7CiAgfQp9Ci5sa3Qtc2Nyb2xsYmFyLS1wYXRod2F5IHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgb3BhY2l0eTogMDsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4yczsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdXNlci1zZWxlY3Q6IG5vbmU7Cn0KLmxrdC1zY3JvbGxiYXItLXBhdGh3YXktLWFsd2F5cyB7CiAgb3BhY2l0eTogLjM7Cn0KLmxrdC1zY3JvbGxiYXItLXBhdGh3YXktLXkgewogIGhlaWdodDogMTAwJTsKICB3aWR0aDogN3B4OwogIHJpZ2h0OiAwOwogIHRvcDogMDsKfQoubGt0LXNjcm9sbGJhci0tcGF0aHdheS0teCB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiA3cHg7CiAgbGVmdDogMDsKICBib3R0b206IDA7Cn0KLmxrdC1zY3JvbGxiYXItLXRodW1iIHsKICB1c2VyLXNlbGVjdDogbm9uZTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgYm9yZGVyLXJhZGl1czogMzBweDsKfQoubGt0LXNjcm9sbGJhci0taW5uZXIgewogIG92ZXJmbG93OiBzY3JvbGw7CiAgd2lkdGg6IGNhbGMoMTAwJSArIDE3cHgpOwogIGhlaWdodDogY2FsYygxMDAlICsgMTdweCk7CiAgcGFkZGluZy1yaWdodDogOHB4OwogICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHsKICAgIHdpZHRoOiAxN3B4OwogICAgaGVpZ2h0OiAxN3B4OwogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgfQp9Cg=="},{"version":3,"sources":["lkt-scrollbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"lkt-scrollbar.vue","sourceRoot":"node_modules/web-toolkit/src/components","sourcesContent":["<template>\n  <div class=\"lkt-scrollbar\" ref=\"wrapper\" @mousemove=\"onMousemove\">\n    <div\n      ref=\"inner\"\n      class=\"lkt-scrollbar--inner\"\n      :class=\"innerClass\"\n      :style=\"innerStyle\"\n      @scroll=\"onScroll\"\n    >\n      <slot></slot>\n    </div>\n    <div v-show=\"scrollThumbY < 100\" class=\"lkt-scrollbar--pathway lkt-scrollbar--pathway--y\" :class=\"{ 'lkt-scrollbar--pathway--always': showPathway }\">\n      <div\n        onselectstart=\"return false\"\n        class=\"lkt-scrollbar--thumb\"\n        :style=\"{ transform: `translateY(${scrollTop}%)`, height: scrollThumbY + '%', backgroundColor: color || 'black' }\"\n        @mousedown=\"onMouseScrollStart($event, 'y')\"\n      ></div>\n    </div>\n    <div v-show=\"scrollThumbX < 100\" class=\"lkt-scrollbar--pathway lkt-scrollbar--pathway--x\" :class=\"{ 'lkt-scrollbar--pathway--always': showPathway }\">\n      <div\n        onselectstart=\"return false\"\n        class=\"lkt-scrollbar--thumb\"\n        :style=\"{ transform: `translateX(${scrollLeft}%)`, width: scrollThumbX + '%', backgroundColor: color || 'black' }\"\n        @mousedown=\"onMouseScrollStart($event, 'x')\"\n      ></div>\n    </div>\n  </div>\n</template>\n<script lang='ts'>\nimport Vue from 'vue';\nimport { ref, computed, onMounted, onUnmounted } from '@vue/composition-api';\nimport { debounce } from '../utils';\nexport default Vue.extend({\n  props: {\n    color: String,\n    innerClass: [Object, Array, String],\n    innerStyle: [Object, String],\n    showPathway: Boolean,\n  },\n  setup(props: Record<string, any>, ctx) {\n    let scrolling = false;\n    let scrollDirection: ScrollDirection = 'y'; // x or y\n    const scrollThumbY = ref(100); // percentage of horizontal scrollbar\n    const scrollThumbX = ref(100); // percentage of vertical scrollbar\n    const scrollTop = ref(0); // mock property based on raw, it's a percentage used in translate\n    const scrollLeft = ref(0); // mock property based on raw, it's a percentage used in translate\n    const wrapper = ref<HTMLElement>();\n    const inner = ref<HTMLElement>();\n    let scrollStartPosition = { x: 0, y: 0, top: 0, left: 0 }; // state before scroll\n    const maxScrollTop = computed(() => {\n      if (!wrapper.value) {\n        return 0;\n      }\n      const content = wrapper.value.children[0];\n      if (!content) {\n        return 0;\n      }\n      return (1 - content.clientHeight / content.scrollHeight) * 100 / scrollThumbY.value * 100;\n    });\n    const maxScrollLeft = computed(() => {\n      if (!wrapper.value) {\n        return 0;\n      }\n      const content = wrapper.value.children[0];\n      if (!content) {\n        return 0;\n      }\n      return (1 - content.clientWidth / content.scrollWidth) * 100 / scrollThumbX.value * 100;\n    });\n    const onMouseScrollStart = (e: MouseEvent, direction: ScrollDirection) => {\n      scrolling = true;\n      scrollDirection = direction;\n      scrollStartPosition = {\n        x: e.x,\n        y: e.y,\n        top: scrollTop.value,\n        left: scrollLeft.value,\n      };\n    };\n    const onScroll = () => {\n      if (!scrolling && inner.value) {\n        if (scrollThumbY.value < 100) {\n          scrollTop.value = inner.value.scrollTop / inner.value.scrollHeight * 100 / scrollThumbY.value * 100;\n        }\n        if (scrollThumbX.value < 100) {\n          scrollLeft.value = inner.value.scrollLeft / inner.value.scrollWidth * 100 / scrollThumbX.value * 100;\n        }\n      }\n    };\n    const onMouseScrollEnd = () => scrolling = false;\n    const onMouseScroll = (e: MouseEvent) => {\n      const direction = scrollDirection;\n      if (scrolling) {\n        const { x, y } = e;\n        if (inner.value) {\n          if (direction === 'y') {\n            const dy = y - scrollStartPosition.y;\n            const innerH = inner.value.clientHeight;\n            const top = scrollStartPosition.top + dy / innerH * 100 / scrollThumbY.value * 100; // calc diff based on percentage of thumb\n            scrollTop.value = Math.min(maxScrollTop.value, Math.max(0, top));\n            inner.value.scrollTop = scrollTop.value / 100 * innerH * scrollThumbY.value * 0.01 / innerH * inner.value.scrollHeight;\n          } else {\n            const dx = x - scrollStartPosition.x;\n            const innerW = inner.value.clientWidth;\n            const left = scrollStartPosition.left + dx / innerW * 100 / scrollThumbX.value * 100;\n            scrollLeft.value = Math.min(maxScrollLeft.value, Math.max(0, left));\n            inner.value.scrollLeft = scrollLeft.value / 100 * innerW * scrollThumbX.value * 0.01 / innerW * inner.value.scrollWidth;\n          }\n        }\n      }\n    };\n    const onMousemove = debounce(() => {\n      if (inner.value) {\n        const currentScrollThumbY = inner.value.clientHeight / inner.value.scrollHeight * 100;\n        const currentScrollThumbX = inner.value.clientWidth / inner.value.scrollWidth * 100;\n        if (scrollThumbY.value !== currentScrollThumbY || scrollThumbX.value !== currentScrollThumbX) {\n          scrollThumbY.value = currentScrollThumbY;\n          scrollThumbX.value = currentScrollThumbX;\n          onScroll();\n        }\n      }\n    }, { interval: 500 });\n    onMounted(() => {\n      document.addEventListener('mouseup', onMouseScrollEnd);\n      document.addEventListener('mousemove', onMouseScroll);\n      onMousemove();\n    });\n    onUnmounted(() => {\n      document.removeEventListener('mouseup', onMouseScrollEnd);\n      document.removeEventListener('mousemove', onMouseScroll);\n    });\n    return {\n      inner,\n      wrapper,\n      scrollThumbX,\n      scrollThumbY,\n      scrollTop,\n      scrollLeft,\n      onMousemove,\n      onScroll,\n      onMouseScrollStart,\n    };\n  },\n});\ntype ScrollDirection = 'x' | 'y';\n</script>\n<style lang=\"scss\">\n.lkt-scrollbar {\n  position: relative;\n  overflow: hidden;\n  &:hover > .lkt-scrollbar--pathway {\n    opacity: .3;\n  }\n}\n.lkt-scrollbar--pathway {\n  position: absolute;\n  opacity: 0;\n  transition: opacity .2s;\n  cursor: pointer;\n  user-select: none;\n}\n.lkt-scrollbar--pathway--always {\n  opacity: .3;\n}\n.lkt-scrollbar--pathway--y {\n  height: 100%;\n  width: 7px;\n  right: 0;\n  top: 0;\n}\n.lkt-scrollbar--pathway--x {\n  width: 100%;\n  height: 7px;\n  left: 0;\n  bottom: 0;\n}\n.lkt-scrollbar--thumb {\n  user-select: none;\n  width: 100%;\n  height: 100%;\n  border-radius: 30px;\n}\n.lkt-scrollbar--inner {\n  overflow: scroll;\n  width: calc(100% + 17px);\n  height: calc(100% + 17px);\n  padding-right: 8px;\n  &::-webkit-scrollbar {\n    width: 17px;\n    height: 17px;\n    background-color: transparent;\n  }\n}\n</style>\n"]}]}