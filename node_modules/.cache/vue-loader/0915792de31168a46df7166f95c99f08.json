{"remainingRequest":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/src/views/user/role.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/src/views/user/role.vue","mtime":1579004450448},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/cache-loader/dist/cjs.js","mtime":1574737719973},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/babel-loader/lib/index.js","mtime":1574737707076},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/ts-loader/index.js","mtime":1574737715182},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/cache-loader/dist/cjs.js","mtime":1574737719973},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/index.js","mtime":1581426799590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgeyByZWYsIG9uTW91bnRlZCB9IGZyb20gJ0B2dWUvY29tcG9zaXRpb24tYXBpJzsKaW1wb3J0IHsgdXNlU2VhcmNoLCB1c2VMb2FkaW5nLCB1c2VDb25maXJtIH0gZnJvbSAnd2ViLXRvb2xraXQvc3JjL3NlcnZpY2UnOwppbXBvcnQgeyBMa3REaWFsb2cgfSBmcm9tICd3ZWItdG9vbGtpdC9zcmMvdXRpbHMvbGt0LWRpYWxvZyc7CmltcG9ydCB7IGlzVW5kZWZpbmVkLCBkZWVwQ2xvbmUgfSBmcm9tICd3ZWItdG9vbGtpdC9zcmMvdXRpbHMnOwppbXBvcnQge0lSb2xlfSBmcm9tICd3ZWItdG9vbGtpdC9zcmMvdHlwZXMvaW50ZXJmYWNlcyc7CmltcG9ydCB7cG9zdFNlcnZpY2V9IGZyb20gJ3dlYi10b29sa2l0L3NyYy9jYXNlLW1haW4nOwppbXBvcnQge3VzZUxpc3R9IGZyb20gJ0AvdXRpbHMvdXNlLWxpc3QnOwppbXBvcnQge0lEZXBhcnRtZW50fSBmcm9tICdAL3R5cGVzL2JlYW5zJzsKaW1wb3J0IHt1cmxNYXB9IGZyb20gJ0AvY29uZmlnJzsKaW1wb3J0IHtFbEZvcm19IGZyb20gJ2VsZW1lbnQtdWkvdHlwZXMvZm9ybSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgc2V0dXAoKSB7CiAgICBjb25zdCBsb2FkaW5nID0gcmVmKGZhbHNlKTsKICAgIGNvbnN0IFtyb2xlTGlzdCwgcXVlcnlSb2xlTGlzdF0gPSB1c2VMaXN0KCdyb2xlJyk7CiAgICBjb25zdCBba2V5d29yZHMsIGZpbHRlcmVkXSA9IHVzZVNlYXJjaChyb2xlTGlzdCk7CiAgICBjb25zdCBbZGVwYXJ0bWVudExpc3QsIHF1ZXJ5RGVwYXJ0bWVudExpc3RdID0gdXNlTGlzdCgnZGVwYXJ0bWVudCcpOwogICAgY29uc3QgW3ByaXZpbGVnZUxpc3QsIHF1ZXJ5UHJpdmlsZWdlc10gPSB1c2VMaXN0KCdwcml2aWxlZ2UnKTsKICAgIGNvbnN0IG1vZGFsID0gcmVmPGFueT4oewogICAgICB2aXNpYmxlOiBmYWxzZSwKICAgICAgZGF0YTogewogICAgICAgIG5hbWU6IHVuZGVmaW5lZCwKICAgICAgICBwcml2aWxlZ2VzOiBbXSwKICAgICAgICBkZXBhcnRtZW50OiB1bmRlZmluZWQsCiAgICAgICAgZXh0ZW5kOiB7fSwKICAgICAgfSwKICAgIH0pOwogICAgY29uc3QgZm9ybSA9IHJlZjxFbEZvcm18bnVsbD4obnVsbCk7CgogICAgYXN5bmMgZnVuY3Rpb24gc2hvd0Zvcm0ocm93PzogSVJvbGUpIHsKICAgICAgbW9kYWwudmFsdWUuZGF0YSA9IHJvdyA/IGRlZXBDbG9uZShyb3cpIDogaW5pdFJvbGVGb3JtKCk7CiAgICAgIG1vZGFsLnZhbHVlLnZpc2libGUgPSB0cnVlOwogICAgfQogICAgYXN5bmMgZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICBjb25zdCB2YWxpZCA9IGF3YWl0IChmb3JtLnZhbHVlIGFzIEVsRm9ybSkudmFsaWRhdGUoKTsKICAgICAgaWYgKCF2YWxpZCkgeyByZXR1cm4gOyB9CiAgICAgIGNvbnN0IHsgZGVwYXJ0bWVudCwgcHJpdmlsZWdlcywgbmFtZSwgaWQgfSA9IG1vZGFsLnZhbHVlLmRhdGEgYXMgSVJvbGU7CiAgICAgIGNvbnN0IHBhcmFtcyA9IHsKICAgICAgICBuYW1lLAogICAgICAgIGlkLAogICAgICAgIGRlcGFydG1lbnRJZDogZGVwYXJ0bWVudC5pZCwKICAgICAgICBwcml2aWxlZ2VzSnNvbjogSlNPTi5zdHJpbmdpZnkocHJpdmlsZWdlcyksCiAgICAgIH07CiAgICAgIGlmIChpc1VuZGVmaW5lZChpZCkpIHsKICAgICAgICBhd2FpdCBwb3N0U2VydmljZSh1cmxNYXAucm9sZV9jcmVhdGUudXJsLCBwYXJhbXMpOwogICAgICAgIE1lc3NhZ2Uuc3VjY2Vzcyhg5re75Yqg5oiQ5YqfYCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYXdhaXQgcG9zdFNlcnZpY2UodXJsTWFwLnJvbGVfdXBkYXRlLnVybCwgcGFyYW1zKTsKICAgICAgICBNZXNzYWdlLnN1Y2Nlc3MoYOS/ruaUueaIkOWKn2ApOwogICAgICB9CiAgICAgIG1vZGFsLnZhbHVlLnZpc2libGUgPSBmYWxzZTsKICAgICAgYXdhaXQgcXVlcnlSb2xlTGlzdCgpOwogICAgfQoKICAgIGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVJvbGUocm9sZTogSVJvbGUpIHsKICAgICAgYXdhaXQgcG9zdFNlcnZpY2UodXJsTWFwLnJvbGVfZGVsLnVybCwgeyBpZDogcm9sZS5pZCB9KTsKICAgICAgYXdhaXQgcXVlcnlSb2xlTGlzdCgpOwogICAgICBNZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOaIkOWKnycpOwogICAgfQogICAgZnVuY3Rpb24gY2hpbmVzaXplKHByaXZpbGVnZXM6IHN0cmluZ1tdKSB7CiAgICAgIHJldHVybiBwcml2aWxlZ2VzLm1hcCgoZW5nOiBzdHJpbmcpID0+IHsKICAgICAgICBmb3IgKGNvbnN0IHByaXZpbGVnZSBvZiBwcml2aWxlZ2VMaXN0LnZhbHVlKSB7CiAgICAgICAgICBpZiAocHJpdmlsZWdlLmlkID09PSBlbmcpIHsKICAgICAgICAgICAgcmV0dXJuIHByaXZpbGVnZS5uYW1lOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSkuZmlsdGVyKChpdGVtKSA9PiBpdGVtKTsKICAgIH0KICAgIG9uTW91bnRlZCh1c2VMb2FkaW5nKGxvYWRpbmcsIGFzeW5jICgpID0+IHsKICAgICAgYXdhaXQgcXVlcnlSb2xlTGlzdCgpOwogICAgICBhd2FpdCBxdWVyeURlcGFydG1lbnRMaXN0KCk7CiAgICAgIGF3YWl0IHF1ZXJ5UHJpdmlsZWdlcygpOwogICAgfSkpOwogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZywgbW9kYWwsIGZvcm0sCiAgICAgIGtleXdvcmRzLAogICAgICBmaWx0ZXJlZCwKICAgICAgZGVsZXRlUm9sZTogdXNlQ29uZmlybSgn56Gu6K6k5Yig6Zmk77yfJywgdXNlTG9hZGluZyhsb2FkaW5nLCBkZWxldGVSb2xlKSksCiAgICAgIHNob3dGb3JtLAogICAgICBjaGluZXNpemUsCiAgICAgIHVwZGF0ZTogdXNlTG9hZGluZyhsb2FkaW5nLCB1cGRhdGUpLCBwcml2aWxlZ2VMaXN0LCBkZXBhcnRtZW50TGlzdCwKICAgIH07CiAgfSwKfTsKZnVuY3Rpb24gaW5pdFJvbGVGb3JtKCk6IFBhcnRpYWw8SVJvbGU+IHsKICByZXR1cm4gewogICAgbmFtZTogJycsCiAgICBwcml2aWxlZ2VzOiBbXSwKICAgIGRlcGFydG1lbnQ6IHVuZGVmaW5lZCwKICB9Owp9Cg=="},{"version":3,"sources":["role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"role.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div class=\"page\" v-loading=\"loading\">\n    <div class=\"flex between align-center little-space\">\n      <el-button type=\"success\" @click=\"showForm()\">添加角色</el-button>\n<!--      <el-input class=\"search-bar\" placeholder=\"请输入搜索内容\" prefix-icon=\"el-icon-search\" clearable v-model=\"keywords\"/>-->\n    </div>\n    <lkt-table :data=\"filtered\" stripe>\n      <el-table-column prop=\"name\" label=\"角色名称\" width=\"150\"/>\n      <el-table-column prop=\"department.name\" label=\"所属部门\" width=\"120\"/>\n      <el-table-column label=\"权限列表\">\n        <span slot-scope=\"{ row }\">\n          {{ chinesize(row.privileges).join('，') }}\n        </span>\n      </el-table-column>\n      <el-table-column width=\"200\" label=\"操作\" align=\"center\">\n        <template slot-scope=\"{ row }\" >\n          <el-button style=\"margin-right: 10px\" type=\"primary\" size=\"mini\" @click=\"showForm(row)\">修改</el-button>\n          <el-button v-if=\"!row.extend || !row.extend.immutable\" type=\"danger\" size=\"mini\" @click=\"deleteRole(row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </lkt-table>\n    <kit-dialog-simple\n      :modal=\"modal\"\n      :confirm=\"update\"\n      width=\"40%\">\n      <div slot=\"title\">{{modal.data.id? '修改':'添加'}}角色</div>\n      <el-form ref=\"form\" label-position=\"left\" label-width=\"100px\" :model=\"modal.data\">\n        <el-form-item label=\"角色名称：\" prop=\"name\" :rules=\"{ required: true, message: '请填写角色名称', trigger: 'blur' }\">\n          <el-input clearable v-model=\"modal.data.name\" placeholder=\"请输入账户登录名\" />\n        </el-form-item>\n        <el-form-item label=\"所属部门：\" prop=\"department\" :rules=\"{ required: true, message: '请选择所属部门', trigger: 'blur' }\">\n          <lkt-select v-model=\"modal.data.department\" :disabled=\"modal.data.extend && modal.data.extend.immutable\" :list=\"departmentList\" />\n        </el-form-item>\n        <el-transfer class=\"flex align-center between\" filterable filter-placeholder=\"输入关键字查询\" v-model=\"modal.data.privileges\" :data=\"privilegeList.map(({ id, name }) => ({ key: id, label: name, disabled: false }))\" :titles=\"['可选权限', '已选权限']\">\n        </el-transfer>\n      </el-form>\n    </kit-dialog-simple>\n  </div>\n</template>\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport { Message } from 'element-ui';\nimport { ref, onMounted } from '@vue/composition-api';\nimport { useSearch, useLoading, useConfirm } from 'web-toolkit/src/service';\nimport { LktDialog } from 'web-toolkit/src/utils/lkt-dialog';\nimport { isUndefined, deepClone } from 'web-toolkit/src/utils';\nimport {IRole} from 'web-toolkit/src/types/interfaces';\nimport {postService} from 'web-toolkit/src/case-main';\nimport {useList} from '@/utils/use-list';\nimport {IDepartment} from '@/types/beans';\nimport {urlMap} from '@/config';\nimport {ElForm} from 'element-ui/types/form';\n\nexport default {\n  setup() {\n    const loading = ref(false);\n    const [roleList, queryRoleList] = useList('role');\n    const [keywords, filtered] = useSearch(roleList);\n    const [departmentList, queryDepartmentList] = useList('department');\n    const [privilegeList, queryPrivileges] = useList('privilege');\n    const modal = ref<any>({\n      visible: false,\n      data: {\n        name: undefined,\n        privileges: [],\n        department: undefined,\n        extend: {},\n      },\n    });\n    const form = ref<ElForm|null>(null);\n\n    async function showForm(row?: IRole) {\n      modal.value.data = row ? deepClone(row) : initRoleForm();\n      modal.value.visible = true;\n    }\n    async function update() {\n      const valid = await (form.value as ElForm).validate();\n      if (!valid) { return ; }\n      const { department, privileges, name, id } = modal.value.data as IRole;\n      const params = {\n        name,\n        id,\n        departmentId: department.id,\n        privilegesJson: JSON.stringify(privileges),\n      };\n      if (isUndefined(id)) {\n        await postService(urlMap.role_create.url, params);\n        Message.success(`添加成功`);\n      } else {\n        await postService(urlMap.role_update.url, params);\n        Message.success(`修改成功`);\n      }\n      modal.value.visible = false;\n      await queryRoleList();\n    }\n\n    async function deleteRole(role: IRole) {\n      await postService(urlMap.role_del.url, { id: role.id });\n      await queryRoleList();\n      Message.success('删除成功');\n    }\n    function chinesize(privileges: string[]) {\n      return privileges.map((eng: string) => {\n        for (const privilege of privilegeList.value) {\n          if (privilege.id === eng) {\n            return privilege.name;\n          }\n        }\n      }).filter((item) => item);\n    }\n    onMounted(useLoading(loading, async () => {\n      await queryRoleList();\n      await queryDepartmentList();\n      await queryPrivileges();\n    }));\n    return {\n      loading, modal, form,\n      keywords,\n      filtered,\n      deleteRole: useConfirm('确认删除？', useLoading(loading, deleteRole)),\n      showForm,\n      chinesize,\n      update: useLoading(loading, update), privilegeList, departmentList,\n    };\n  },\n};\nfunction initRoleForm(): Partial<IRole> {\n  return {\n    name: '',\n    privileges: [],\n    department: undefined,\n  };\n}\n</script>\n"]}]}