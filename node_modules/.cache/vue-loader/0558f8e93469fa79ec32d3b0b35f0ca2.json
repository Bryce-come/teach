{"remainingRequest":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/web-toolkit/src/components/lkt-date-picker.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/web-toolkit/src/components/lkt-date-picker.vue","mtime":1579004471000},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/cache-loader/dist/cjs.js","mtime":1574737719973},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/babel-loader/lib/index.js","mtime":1574737707076},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/ts-loader/index.js","mtime":1574737715182},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/cache-loader/dist/cjs.js","mtime":1574737719973},{"path":"/Users/ycj/WebstormProjects/lttProjects/teach-platform-web/node_modules/vue-loader/lib/index.js","mtime":1581426799590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["lkt-date-picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"lkt-date-picker.vue","sourceRoot":"node_modules/web-toolkit/src/components","sourcesContent":["<template>\n  <el-date-picker\n    :type=\"type === 'yearrange' ? 'monthrange' : type\"\n    :value=\"value\"\n    :picker-options=\"pickerOptions[type]\"\n    :start-placeholder=\"`开始${CNMap[type]}`\"\n    :end-placeholder=\"`结束${CNMap[type]}`\"\n    :placeholder=\"placeholder || `请选择${CNMap[type]}`\"\n    :format=\"format\"\n    :clearable=\"clearable\"\n    @input=\"update\"/>\n</template>\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport { isUndefined } from '../utils';\n// import { fillBaseTime } from '../utils/device-utils';\n// import { store } from '../main';\nexport default {\n  props: {\n    type: {\n      default: 'datetimerange',\n      validator(val: string) {\n        return [\n          'datetime', 'date', 'month', 'year',\n          'datetimerange', 'daterange', 'monthrange', 'yearrange',\n        ].includes(val);\n      },\n    },\n    value: [Date, Array],\n    format: {\n      type: String,\n      default(this: any) {\n        return isUndefined(this.format) ? undefined : 'yyyy';\n      },\n    },\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    placeholder: String,\n  },\n  setup(props: Record<string, any>, ctx: any) {\n    const update = (date: Date | Date[]) => {\n      ctx.emit('change', date);\n      ctx.emit('input', date);\n      ctx.emit('select', date);\n    };\n    const pickerOptions = {\n      datetimerange: {\n        shortcuts: [{\n          text: '最近1小时',\n          onClick: (picker: Vue) => picker.$emit('pick', [ new Date( Date.now() - 3600000 ), new Date() ]),\n        }, {\n          text: '最近2小时',\n          onClick: (picker: Vue) => picker.$emit('pick', [ new Date( Date.now() - 7200000 ), new Date() ]),\n        }, {\n          text: '今天',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            start.setHours(0);\n            start.setSeconds(0);\n            start.setMinutes(0);\n            start.setMilliseconds(0);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, new Date() ]);\n          },\n        }, {\n          text: '昨天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 24 * 3600000);\n            const end = new Date();\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            // fillBaseTime(end, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '前天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 48 * 3600000);\n            const end = new Date(Date.now() - 24 * 3600000);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            // fillBaseTime(end, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近3天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 72 * 3600000);\n            const end = new Date();\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近7天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 168 * 3600000);\n            const end = new Date();\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近30天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 720 * 3600000);\n            const end = new Date();\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }],\n      },\n      daterange: {\n        shortcuts: [{\n          text: '今天',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            start.setHours(0);\n            start.setSeconds(0);\n            start.setMinutes(0);\n            start.setMilliseconds(0);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, new Date() ]);\n          },\n        }, {\n          text: '昨天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 24 * 3600000);\n            const end = new Date();\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            end.setHours(0, 0, 0);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '前天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 48 * 3600000);\n            const end = new Date(Date.now() - 24 * 3600000);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            end.setHours(0, 0, 0);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近3天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 72 * 3600000);\n            const end = new Date();\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近7天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 168 * 3600000);\n            const end = new Date();\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近30天',\n          async onClick(picker: Vue) {\n            const start = new Date(Date.now() - 720 * 3600000);\n            const end = new Date();\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }],\n      },\n      monthrange: {\n        shortcuts: [{\n          text: '本月',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            const end = new Date();\n            start.setDate(1);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '上个月',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            const end = new Date();\n            const currentMonth = start.getMonth() + 1;\n            start.setMonth(currentMonth - 1 || 12, 1);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            end.setDate(1);\n            end.setHours(0, 0, 0);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近3个月',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            const end = new Date();\n            const currentMonth = start.getMonth() + 1;\n            start.setMonth(currentMonth - 3 <= 0 ? currentMonth + 9 : currentMonth - 3, 1);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近6个月',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            const end = new Date();\n            const currentMonth = start.getMonth() + 1;\n            start.setMonth(currentMonth - 6 <= 0 ? currentMonth + 6 : currentMonth - 6, 1);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近12个月',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            const end = new Date();\n            const currentMonth = start.getMonth() + 1;\n            start.setFullYear(start.getFullYear() - 1);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }],\n      },\n      yearrange: {\n        shortcuts: [{\n          text: '今年',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            const end = new Date();\n            start.setMonth(1, 1);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '去年',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            const end = new Date();\n            start.setFullYear(start.getFullYear() - 1, 1, 1);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            end.setMonth(1, 1);\n            end.setHours(0, 0, 0);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '前年',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            const end = new Date();\n            start.setFullYear(start.getFullYear() - 2, 1, 1);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            end.setFullYear(end.getFullYear() - 1, 1, 1);\n            end.setHours(0, 0, 0);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }, {\n          text: '最近3年',\n          async onClick(picker: Vue) {\n            const start = new Date();\n            const end = new Date();\n            start.setFullYear(start.getFullYear() - 3, 1, 1);\n            // await store.dispatch(ACTIONS.WORK_SETTING_CHECK);\n            // fillBaseTime(start, store.state.workSetting.startTime);\n            picker.$emit('pick', [ start, end ]);\n          },\n        }],\n      },\n    };\n    const CNMap = {\n      datetime: '时间',\n      datetimerange: '时间',\n      date: '日期',\n      daterange: '日期',\n      month: '月份',\n      monthrange: '月份',\n      year: '年份',\n      yearrange: '年份',\n    };\n    return { update, pickerOptions, CNMap };\n  },\n};\n</script>\n\n"]}]}